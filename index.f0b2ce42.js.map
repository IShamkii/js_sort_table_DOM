{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CC0CA,IAAM,EAAa,EAAG,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,OACjE,EAAiB,EAAG,SAAS,aAAa,CAAC,SAAS,IAAI,EAE9D,iBAAiB,QAAS,SAAC,CAA3B,EACE,GAAI,EAAU,QAAQ,CAAC,EAAE,MAAM,EAAG,CAChC,IAAM,EAAa,AA5CvB,SAAsB,CAAM,CAAE,CAAK,EACjC,IAAM,EAAe,EAAG,GAExB,OAAQ,GACN,IAAK,OACH,EAAY,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EACE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CACpE,GAEA,KAEF,KAAK,WACH,EAAY,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EACE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CACpE,GAEA,KAEF,KAAK,MACH,EAAY,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EACE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CACpE,GAEA,KAEF,KAAK,SACH,EAAY,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EAIE,OAAO,AAHS,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IAC7C,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,GAG/D,EAGJ,CAEA,OAAO,CACT,EAOoC,EAAE,MAAM,CAAC,WAAW,CAAE,GAChD,EAAY,SAAS,aAAa,CAAC,SACnC,EAAe,SAAS,aAAa,CAAC,SAE5C,EAAW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAa,MAAM,CAAC,E,GAChD,EAAU,WAAW,CAAC,EACxB,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nfunction getSortTable(sortBy, table) {\n    var copyOfTable = _to_consumable_array(table);\n    switch(sortBy){\n        case \"Name\":\n            copyOfTable.sort(function(a, b) {\n                return a.cells[0].textContent.localeCompare(b.cells[0].textContent);\n            });\n            break;\n        case \"Position\":\n            copyOfTable.sort(function(a, b) {\n                return a.cells[1].textContent.localeCompare(b.cells[1].textContent);\n            });\n            break;\n        case \"Age\":\n            copyOfTable.sort(function(a, b) {\n                return a.cells[2].textContent.localeCompare(b.cells[2].textContent);\n            });\n            break;\n        case \"Salary\":\n            copyOfTable.sort(function(a, b) {\n                var numberA = a.cells[3].textContent.slice(1).replace(\",\", \"\");\n                var numberB = b.cells[3].textContent.slice(1).replace(\",\", \"\");\n                return numberA - numberB;\n            });\n            break;\n    }\n    return copyOfTable;\n}\nvar tableHead = _to_consumable_array(document.querySelector(\"thead\").querySelectorAll(\"th\"));\nvar tableBodyRows = _to_consumable_array(document.querySelector(\"tbody\").rows);\naddEventListener(\"click\", function(e) {\n    if (tableHead.includes(e.target)) {\n        var sortedRows = getSortTable(e.target.textContent, tableBodyRows);\n        var tableBody = document.querySelector(\"tbody\");\n        var newTableBody = document.createElement(\"tbody\");\n        sortedRows.forEach(function(row) {\n            return newTableBody.append(row);\n        });\n        tableBody.replaceWith(newTableBody);\n    }\n});\n\n//# sourceMappingURL=index.f0b2ce42.js.map\n","'use strict';\n\n// write code here\nfunction getSortTable(sortBy, table) {\n  const copyOfTable = [...table];\n\n  switch (sortBy) {\n    case 'Name':\n      copyOfTable.sort((a, b) => {\n        return a.cells[0].textContent.localeCompare(b.cells[0].textContent);\n      });\n\n      break;\n\n    case 'Position':\n      copyOfTable.sort((a, b) => {\n        return a.cells[1].textContent.localeCompare(b.cells[1].textContent);\n      });\n\n      break;\n\n    case 'Age':\n      copyOfTable.sort((a, b) => {\n        return a.cells[2].textContent.localeCompare(b.cells[2].textContent);\n      });\n\n      break;\n\n    case 'Salary':\n      copyOfTable.sort((a, b) => {\n        const numberA = a.cells[3].textContent.slice(1).replace(',', '');\n        const numberB = b.cells[3].textContent.slice(1).replace(',', '');\n\n        return numberA - numberB;\n      });\n\n      break;\n  }\n\n  return copyOfTable;\n}\n\nconst tableHead = [...document.querySelector('thead').querySelectorAll('th')];\nconst tableBodyRows = [...document.querySelector('tbody').rows];\n\naddEventListener('click', (e) => {\n  if (tableHead.includes(e.target)) {\n    const sortedRows = getSortTable(e.target.textContent, tableBodyRows);\n    const tableBody = document.querySelector('tbody');\n    const newTableBody = document.createElement('tbody');\n\n    sortedRows.forEach((row) => newTableBody.append(row));\n    tableBody.replaceWith(newTableBody);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tableHead","document","querySelector","querySelectorAll","tableBodyRows","rows","addEventListener","e","includes","target","sortedRows","getSortTable","sortBy","table","copyOfTable","sort","a","b","cells","textContent","localeCompare","numberA","replace","tableBody","newTableBody","createElement","forEach","row","append","replaceWith"],"version":3,"file":"index.f0b2ce42.js.map"}